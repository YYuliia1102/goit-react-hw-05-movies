{"version":3,"file":"static/js/530.f51fc504.chunk.js","mappings":"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","sources":["pages/CostInfo.jsx","pages/Reviews.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [credits, setCredits] = useState([]);\n\n    useEffect(() => {\n        const fetchMovieCredits = async () => {\n            if (!movieId) return;\n\n            const creditsData = await getMovieCredits(movieId);\n            setCredits(creditsData);\n        };\n\n        fetchMovieCredits();\n    }, [movieId]);\n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    return (\n        <div>\n            <h2>Movie Cast</h2>\n            <ul>\n                {credits.map((actor) => (\n                    <li key={actor.id}>\n                        <img\n                            src={\n                                actor.profile_path\n                                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                                    : defaultImg\n                            }\n                            alt={actor.name}\n                            width=\"100\"\n                        />\n                        <p>{actor.name}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const fetchMovieReviews = async () => {\n            if (!movieId) return;\n\n            const reviewsData = await getMovieReviews(movieId);\n            setReviews(reviewsData);\n        };\n\n        fetchMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            <h2>Movie Reviews</h2>\n            {reviews.length > 0 ? (\n                <ul>\n                    {reviews.map((review) => (\n                        <li key={review.id}>\n                            <p>Author: {review.author}</p>\n                            <p>{review.content}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No reviews available</p>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__yKjnD\",\"goBackLink\":\"MovieDetails_goBackLink__p4MLL\",\"movieInfo\":\"MovieDetails_movieInfo__RFaEp\",\"movieImage\":\"MovieDetails_movieImage__qnOp2\",\"details\":\"MovieDetails_details__-8Cxp\",\"title\":\"MovieDetails_title__-2Xvc\",\"releaseDate\":\"MovieDetails_releaseDate__sY06j\",\"voteAverage\":\"MovieDetails_voteAverage__8DSpj\",\"overview\":\"MovieDetails_overview__D3vhU\",\"genres\":\"MovieDetails_genres__wYpii\",\"links\":\"MovieDetails_links__nb21h\",\"link\":\"MovieDetails_link__wv3O1\"};","import React, { useState, useEffect } from 'react';\nimport { Link, Route, Routes, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport Cast from './CostInfo';\nimport Reviews from './Reviews';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const getMovieDetails = async () => {\n            const movieDetails = await fetchMovieDetails(movieId);\n            setMovie(movieDetails);\n        };\n\n        if (movieId) {\n            getMovieDetails();\n        }\n    }, [movieId]);\n\n    if (!movie) {\n        return null;\n    }\n\n    return (\n        <div className={styles.container}>\n            <Link to={location.state?.from || '/'} className={styles.goBackLink}>\n                Go back\n            </Link>\n            <div className={styles.movieInfo}>\n                <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    alt={movie.title}\n                    className={styles.movieImage}\n                />\n                <div className={styles.details}>\n                    <h1 className={styles.title}>{movie.title}</h1>\n                    <p className={styles.releaseDate}>Release Date: {movie.release_date}</p>\n                    <p className={styles.voteAverage}>Vote Average: {movie.vote_average}</p>\n                    <p className={styles.overview}>Overview: {movie.overview}</p>\n                    <p className={styles.genres}>Genres: {movie.genres.map((genre) => genre.name).join(', ')}</p>\n                </div>\n            </div>\n            <div className={styles.links}>\n                <Link to=\"cast\" className={styles.link}>\n                    Cast\n                </Link>\n                <Link to=\"reviews\" className={styles.link}>\n                    Reviews\n                </Link>\n            </div>\n            <Routes>\n                <Route path=\"cast\" element={<Cast />} />\n                <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n        </div>\n    );\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__hb-lD\",\"searchInput\":\"Movies_searchInput__IDNTA\",\"searchButton\":\"Movies_searchButton__I-A1L\",\"form\":\"Movies_form__5L7s0\",\"movieList\":\"Movies_movieList__UibTY\",\"movieItem\":\"Movies_movieItem__oPddp\",\"movieGrid\":\"Movies_movieGrid__Gff6s\",\"movieCard\":\"Movies_movieCard__P7o1Q\",\"movieLink\":\"Movies_movieLink__prvJg\",\"movieImage\":\"Movies_movieImage__FcW4N\",\"movieTitle\":\"Movies_movieTitle__dFlLv\"};","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport MovieDetails from './MovieDetails';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../services/api.js';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n    const { movieId } = useParams();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const searchMovie = searchParams.get('query');\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            if (searchMovie) {\n                const data = await searchMovies(searchMovie);\n                setMovies(data);\n            } else {\n                setMovies([]);\n            }\n        };\n\n        getMovies();\n    }, [searchMovie]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const searchValue = event.target.children.search.value;\n        setSearchParams({ query: searchValue });\n    };\n\n    return (\n        <div className={styles.container}>\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"Search by movies\"\n                    required\n                    minLength={2}\n                    className={styles.searchInput}\n                />\n                <button type=\"submit\" className={styles.searchButton}>Search</button>\n            </form>\n            {searchMovie ? (\n                movies.length > 0 ? (\n                    <div className={styles.movieGrid}>\n                        {movies.map((movie) => (\n                            <div key={movie.id} className={styles.movieCard}>\n                                <Link state={{ from: location }} to={`/movies/${movie.id}`} className={styles.movieLink}>\n                                    <img\n                                        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                                        alt={movie.title}\n                                        width={200}\n                                        className={styles.movieImage}\n                                    />\n                                    <h2 className={styles.movieTitle}>{movie.title}</h2>\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p>No movies found</p>\n                )\n            ) : null}\n            <MovieDetails movieId={movieId} />\n        </div>\n    );\n};\n\nexport default Movies;\n","const apiKey = '7bd54d4ecca90d61812ee42cdc93d740';\n\nconst fetchData = async (endpoint) => {\n    try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.log('Error fetching data:', error);\n        return null;\n    }\n};\n\nexport const fetchTrendingMovies = async () => {\n    const endpoint = `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`;\n    return fetchData(endpoint).then((data) => data?.results || []);\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    const endpoint = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n    const data = await fetchData(endpoint);\n    return data\n        ? {\n            title: data.title,\n            release_date: data.release_date,\n            vote_average: data.vote_average,\n            overview: data.overview,\n            genres: data.genres,\n            poster_path: data.poster_path,\n        }\n        : null;\n};\n\nexport const getMovieCredits = async (movieId) => {\n    const endpoint = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n    const data = await fetchData(endpoint);\n    return data?.cast || [];\n};\n\nexport const getMovieReviews = async (movieId) => {\n    const endpoint = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`;\n    const data = await fetchData(endpoint);\n    return data?.results || [];\n};\n\nexport const searchMovies = async (query) => {\n    const endpoint = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`;\n    const data = await fetchData(endpoint);\n    return data?.results || [];\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","credits","setCredits","useEffect","fetchMovieCredits","getMovieCredits","creditsData","map","actor","src","profile_path","alt","name","width","id","reviews","setReviews","fetchMovieReviews","getMovieReviews","reviewsData","length","review","author","content","movie","setMovie","location","useLocation","getMovieDetails","fetchMovieDetails","movieDetails","className","styles","to","state","from","poster_path","title","release_date","vote_average","overview","genres","genre","join","path","element","useSearchParams","searchParams","setSearchParams","searchMovie","get","movies","setMovies","getMovies","searchMovies","data","onSubmit","event","preventDefault","searchValue","target","children","search","value","query","type","placeholder","required","minLength","MovieDetails","apiKey","fetchData","endpoint","fetch","response","json","console","log","fetchTrendingMovies","then","results","cast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}